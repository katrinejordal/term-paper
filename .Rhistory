gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9) %>%
head(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)
head(gdp)
antall_fodt <- ApiData(09745)
head(antall_fodt[[1]])
View(antall_fodt)
gdp <- ApiData(11721) %>%
rename(macro = makrostørrelse,
time = måned,
var = statistikkvariabel,
amount = X11721..Makroøkonomiske.hovedstørrelser..etter.makrostørrelse..måned.og.statistikkvariabel)
gdp <- ApiData(11721)
View(gdp)
gdp <- ApiData(11721) %>%
colnames(
macro = makrostørrelse,
time = måned,
var = statistikkvariabel,
amount = X11721..Makroøkonomiske.hovedstørrelser..etter.makrostørrelse..måned.og.statistikkvariabel
)
gdp <- ApiData(11721, ContentsCode = "Levendefødte")
gdp <- ApiData(11721,
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)
View(gdp)
head(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9"
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9"
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)
gdp <- ApiData(11721,
Makrost = bnpb.nr23_9
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)
gdp <- ApiData(11721,
Makrost = bnpb.nr23_9
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)
gdp <- ApiData(11721,
# Makrost = bnpb.nr23_9
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)
View(gdp)
View(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)")
View(gdp)
View(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)
View(gdp)
head(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)[[1]]
View(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)[[1]] %>%
separate(col = "time", into = c("year", "month"), sep = "M")
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = -1:-9)[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M")
View(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)")[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M")
View(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)")[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M") %>%
filter(year == "2020)
head(gdp)
antall_fodt <- ApiData(09745)
head(antall_fodt[[1]])
# Economic data from SSB -------------------------------------------------------
## GDP Norway
gdp <- read.csv2("https://data.ssb.no/api/v0/dataset/615167.csv?lang=no") %>%
rename(macro = makrostørrelse,
time = måned,
var = statistikkvariabel,
amount = X11721..Makroøkonomiske.hovedstørrelser..etter.makrostørrelse..måned.og.statistikkvariabel) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
macro == "bnpb.nr23_9 Bruttonasjonalprodukt, markedsverdi",
var == "Løpende priser, sesongjustert (mill. kr)") %>%
mutate(amount = as.numeric(amount)) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100)
gdp <- xts(gdp$normalize, gdp$date)
## GDP Norway excluding oil
gdp_ex_oil <- read.csv2("https://data.ssb.no/api/v0/dataset/615167.csv?lang=no") %>%
rename(macro = makrostørrelse,
time = måned,
var = statistikkvariabel,
amount = X11721..Makroøkonomiske.hovedstørrelser..etter.makrostørrelse..måned.og.statistikkvariabel) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
macro == "bnpb.nr23_9fn Bruttonasjonalprodukt Fastlands-Norge, markedsverdi",
var == "Løpende priser, sesongjustert (mill. kr)") %>%
mutate(amount = as.numeric(amount)) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100)
gdp_ex_oil <- xts(gdp_ex_oil$normalize, gdp_ex_oil$date)
## Import
import <- read.csv2("https://data.ssb.no/api/v0/dataset/615167.csv?lang=no") %>%
rename(macro = makrostørrelse,
time = måned,
var = statistikkvariabel,
amount = X11721..Makroøkonomiske.hovedstørrelser..etter.makrostørrelse..måned.og.statistikkvariabel) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
macro == "imp.nrtot Import i alt",
var == "Løpende priser, sesongjustert (mill. kr)") %>%
filter(macro == "imp.nrtot Import i alt") %>%
filter(var == "Løpende priser, sesongjustert (mill. kr)") %>%
mutate(amount = as.numeric(amount)) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100)
import <- xts(import$normalize, import$date)
## Export
export <- read.csv2("https://data.ssb.no/api/v0/dataset/615167.csv?lang=no") %>%
rename(macro = makrostørrelse,
time = måned,
var = statistikkvariabel,
amount = X11721..Makroøkonomiske.hovedstørrelser..etter.makrostørrelse..måned.og.statistikkvariabel) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
macro == "eks.nrtot Eksport i alt",
var == "Løpende priser, sesongjustert (mill. kr)") %>%
mutate(amount = as.numeric(amount)) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100)
export <- xts(export$normalize, export$date)
## Moneysupply M1
m1 <- read.csv2("https://data.ssb.no/api/v0/dataset/172769.csv?lang=no") %>%
rename(var = statistikkvariabel,
time = måned,
amount = X10945..Pengemengden.M1..M2.og.M3..etter.statistikkvariabel.og.måned) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
var == "Pengemengden M1. Beholdninger (mill. kr)") %>%
mutate(amount = as.numeric(amount)) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100)
m1 <- xts(m1$normalize, m1$date)
## Moneysupply M2
m2 <- read.csv2("https://data.ssb.no/api/v0/dataset/172769.csv?lang=no") %>%
rename(var = statistikkvariabel,
time = måned,
amount = X10945..Pengemengden.M1..M2.og.M3..etter.statistikkvariabel.og.måned) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
var == "Pengemengden M2. Beholdninger (mill. kr)") %>%
mutate(amount = as.numeric(amount)) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100)
m2 <- xts(m2$normalize, m2$date)
## Moneysupply M3
m3 <- read.csv2("https://data.ssb.no/api/v0/dataset/172769.csv?lang=no") %>%
rename(var = statistikkvariabel,
time = måned,
amount = X10945..Pengemengden.M1..M2.og.M3..etter.statistikkvariabel.og.måned) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
var == "Pengemengden M3. Beholdninger (mill. kr)") %>%
mutate(amount = as.numeric(amount)) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100)
m3 <- xts(m3$normalize, m3$date)
## Inflation: KPI-JA
kpi_ja <- read.csv2("https://data.ssb.no/api/v0/dataset/1118.csv?lang=no") %>%
rename(macro = konsumgruppe,
time = måned,
var = statistikkvariabel,
amount = X05327..KPI.JA.og.KPI.JAE..etter.konsumgruppe..måned.og.statistikkvariabel) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
macro == "JA_TOTAL KPI-JA Totalindeks",
var == "KPI-JA, KPI-JAE. KPI-JE og KPI-JEL (2015=100) Månedlig") %>%
# Since, SSB report ".." if NA and , as delimiter:
mutate_all(~na_if(., "..")) %>%
mutate_at("amount", ~ as.numeric(sub(",", ".", amount, fixed = TRUE))) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100) # double check this
kpi_ja <- xts(kpi_ja$normalize, kpi_ja$date)
## Inflation: KPI-JA
kpi_jae <- read.csv2("https://data.ssb.no/api/v0/dataset/1118.csv?lang=no") %>%
rename(macro = konsumgruppe,
time = måned,
var = statistikkvariabel,
amount = X05327..KPI.JA.og.KPI.JAE..etter.konsumgruppe..måned.og.statistikkvariabel) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
macro == "JAE_TOTAL KPI-JAE Totalindeks",
var == "KPI-JA, KPI-JAE. KPI-JE og KPI-JEL (2015=100) Månedlig") %>%
# Since, SSB report ".." if NA and , as delimiter:
mutate_all(~na_if(., "..")) %>%
mutate_at("amount", ~ as.numeric(sub(",", ".", amount, fixed = TRUE))) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100) # double check this
kpi_jae <- xts(kpi_jae$normalize, kpi_jae$date)
## Unemployment (AKU)
aku <- read.csv2("https://data.ssb.no/api/v0/dataset/1054.csv?lang=no") %>%
rename(sex = kjønn,
age = alder,
time = måned,
var = statistikkvariabel,
amount = X08931..Sysselsetting.og.arbeidsløyse.for.personar.15.74.år..etter.kjønn..alder..statistikkvariabel.og.måned) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
sex == "0 Begge kjønn",
age == "15-74 15-74 år",
var == "Arbeidslause (AKU) (1 000 personar), sesongjustert") %>%
mutate_all(~na_if(., "..")) %>%
mutate(amount = as.numeric(amount)) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100)
aku <- xts(aku$normalize, aku$date)
## Unemployment (NAV)
nav <- read.csv2("https://data.ssb.no/api/v0/dataset/1054.csv?lang=no") %>%
rename(sex = kjønn,
age = alder,
time = måned,
var = statistikkvariabel,
amount = X08931..Sysselsetting.og.arbeidsløyse.for.personar.15.74.år..etter.kjønn..alder..statistikkvariabel.og.måned) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
sex == "0 Begge kjønn",
age == "15-74 15-74 år",
var == "Registrerte arbeidslause ved NAV (1 000 personar), sesongjustert") %>%
mutate_all(~na_if(., "..")) %>%
mutate(amount = as.numeric(amount)) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100)
nav <- xts(nav$normalize, nav$date)
## Bankruptcies
bankruptcies <- read.csv2("https://data.ssb.no/api/v0/dataset/924816.csv?lang=no") %>%
rename(time = måned,
variable = statistikkvariabel,
amount = X09695..Opna.konkursar..etter.måned.og.statistikkvariabel) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020") %>%
mutate(amount = as.numeric(amount)) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100)
bankruptcies <- xts(bankruptcies$normalize, bankruptcies$date)
# Merge all data ---------------------------------------------------------------
start_date <- as.Date("2020-01-01")
end_date <- Sys.Date()
dates <- seq(from = start_date, to = end_date, by = "days")
eco_xts <- merge(covid_total, covid_daily, google, gdp, gdp_ex_oil, import,
export, m1, m2, m3, kpi_ja, kpi_jae, aku, nav, bankruptcies,
USD_NOK, brent_oil, osebx, obx, oilservice, seafood, shipping,
equity_certificates, mid_cap, small_cap, energy, materials,
industry, consumer_discretionary, consumer_staples,
health_care, finance, it, communication, utilities,
real_estate)
merged_xts <- merge(eco_xts, dates)
merged_xts <- na.approx(merged_xts) # to get a line between the two points in time
merged_xts <- merge(merged_xts, dates) # carry forward
merged_df <- as.data.frame(merged_xts)
# Plots ------------------------------------------------------------------------
colnames(merged_df)
ggplot(merged_df, aes(x = dates)) +
theme_classic() +
labs(colour = "", x = "", y = "", title = "") +
scale_x_date(name = "", date_labels = "%B", date_breaks = "1 month") +
scale_y_continuous(limits = c(0, 120), breaks = seq(0, 120, by = 10),
sec.axis = sec_axis(~ ., breaks = seq(0, 120, by = 10))) +
scale_color_manual(values = c("palegoldenrod",
"palegreen3",
"palegreen4",
"paleturquoise3",
"paleturquoise4",
"palevioletred3",
"palevioletred4",
"peachpuff3",
"peachpuff4",
"skyblue3",
"skyblue4")) +
geom_line(aes(y = osebx, color = "osebx"), size = 2) +
geom_line(aes(y = oilservice, color = "oilservice"), size = 1) +
geom_line(aes(y = seafood, color = "seafood"), size = 1) +
geom_line(aes(y = shipping, color = "shipping"), size = 1) +
geom_line(aes(y = equity_certificates, color = "equity_certificates"), size = 1) +
geom_line(aes(y = mid_cap, color = "mid_cap"), size = 1) +
geom_line(aes(y = small_cap, color = "small_cap"), size = 1)
ggplot(merged_df, aes(x = dates)) +
theme_classic() +
labs(colour = "", x = "", y = "", title = "") +
scale_x_date(name = "", date_labels = "%B", date_breaks = "1 month") +
scale_y_continuous(limits = c(0, 150), breaks = seq(0, 150, by = 10),
sec.axis = sec_axis(~ ., breaks = seq(0, 150, by = 10))) +
scale_color_manual(values = c("palegoldenrod",
"palegreen3",
"palegreen4",
"paleturquoise3",
"paleturquoise4",
"palevioletred3",
"palevioletred4",
"peachpuff3",
"peachpuff4",
"skyblue3",
"skyblue4")) +
geom_line(aes(y = osebx, color = "osebx"), size = 2) +
geom_line(aes(y = energy, color = "energy"), size = 1) +
geom_line(aes(y = materials, color = "materials"), size = 1) +
geom_line(aes(y = industry, color = "industry"), size = 1) +
geom_line(aes(y = consumer_discretionary, color = "consumer_discretionary"), size = 1) +
geom_line(aes(y = consumer_staples, color = "consumer_staples"), size = 1) +
geom_line(aes(y = finance, color = "finance"), size = 1) +
geom_line(aes(y = it, color = "it"), size = 1) +
geom_line(aes(y = communication, color = "communication"), size = 1) +
geom_line(aes(y = real_estate, color = "real_estate"), size = 1) +
geom_line(aes(y = health_care, color = "health_care"), size = 1)
ggplot(merged_df, aes(x = dates)) +
theme_classic() +
labs(colour = "", x = "", y = "", title = "") +
scale_x_date(name = "", date_labels = "%B", date_breaks = "1 month") +
scale_y_continuous(sec.axis = sec_axis(~ .)) +
geom_line(aes(y = covid_daily, color = "covid_daily"))
## Planen var å få til noe sånt, illustre finansiell/økonomisk data og covid:
ggplot(merged_df, aes(x = dates)) +
geom_col(aes(y = covid_daily/5), size = 1, color = "paleturquoise4", fill = "paleturquoise4") +
geom_line(aes(y = osebx), size = 1.5, color = "peachpuff3") +
geom_line(aes(y = oilservice), size = 1.5, color = "peachpuff4") +
scale_y_continuous(name = "OSEBX and Oilservice normalized to 100",
sec.axis = sec_axis(~.*5, name = "Corona cases daily"))
# Få til label på slutten, slik at det er tydelig at det er OSEBX.
# Få det inn i en funksjon, sånn at man enkelt kan lage plots
## Forbedringer script: --------------
## Laste inn data fra oslobørs på en bedre måte.
## Enten webscrape investing.com, slik at man slipper å oppdatere excel-filene
## Eller gjøre som dag 3 i BAN420, laste inn alle filer i mappen raskt og enkelt
##
## Lage functioner til plotting (og laste inn data?), sånn at man enkelt kan velge
## hvilke økonomiske/finansielle størrelser man ønsker
## Mulig å tilgjengeliggjøre dette på en enkel html-side, eller noe github-greier?
## Linker til data:
# Indekser på oslobørs: https://www.oslobors.no/markedsaktivitet/#/list/shareindices/quotelist/intraday
# SSB data: https://data.ssb.no/api/v0/dataset/
# farger i r: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)")[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M") %>%
filter(year == "2020")
View(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = "2020")[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M") %>%
filter(year == "2020")
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = T)[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M") %>%
filter(year == "2020")
View(gdp)
gdp <- as_tibble(ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = T)[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M") %>%
filter(year == "2020"))
View(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = T)[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M") %>%
filter(year == "2020") %>%
mutate(amount = as.numeric(amount),
date = as.yearmon(paste(year, month), "%Y %m"),
date = as.Date(date),
normalize = amount / first(amount) * 100)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = T)[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M") %>%
filter(year == "2020") %>%
mutate(amount = as.numeric(value),
date = as.yearmon(paste(year, month), "%Y %m"),
date = as.Date(date),
normalize = amount / first(amount) * 100)
View(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = T)[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M") %>%
filter(year == "2020") %>%
transmute(amount = as.numeric(value),
date = as.yearmon(paste(year, month), "%Y %m"),
date = as.Date(date),
normalize = amount / first(amount) * 100)
View(gdp)
View(gdp)
head(gdp)
gdp2 <- read.csv2("https://data.ssb.no/api/v0/dataset/615167.csv?lang=no", fileEncoding = "Latin1") %>%
rename(macro = makrostørrelse,
time = måned,
var = statistikkvariabel,
amount = X11721..Makroøkonomiske.hovedstørrelser..etter.makrostørrelse..måned.og.statistikkvariabel) %>%
separate(col = "time", into = c("year", "month"), sep = "M") %>%
filter(year == "2020",
macro == "bnpb.nr23_9 Bruttonasjonalprodukt, markedsverdi",
var == "Løpende priser, sesongjustert (mill. kr)") %>%
mutate(amount = as.numeric(amount)) %>%
mutate(date = as.yearmon(paste(year, month), "%Y %m")) %>%
mutate(date = as.Date(date)) %>%
mutate(normalize = amount / first(amount) * 100)
gdp2 <- xts(gdp$normalize, gdp$date)
View(gdp2)
gdp1 <- xts(gdp$normalize, gdp$date)
View(gdp1)
View(gdp2)
gdp1 <- xts(gdp$normalize, gdp$date) %>%
colnames("GDP")
gdp1 <- xts(gdp$normalize, gdp$date) %>%
colnames(gdp1) <- c("Date", "GDP")
gdp1 <- xts(gdp$normalize, gdp$date) %>%
colnames(gdp1) <- c("Date", "GDP")
colnames(gdp1) <- c("Date", "GDP")
colnames(gdp1) <- c("GDP")
View(gdp1)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = T)[[1]] %>%
separate(col = "måned",
into = c("year", "month"),
sep = "M") %>%
filter(year == "2020") %>%
transmute(
amount = as.numeric(value),
date = as.Date(as.yearmon(paste(year, month), "%Y %m")),
#date = as.Date(date),
normalize = amount / first(amount) * 100
)
View(gdp)
type_of(gdp)
typeof(gdp)
class(gdp)
class(gdp$date)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = T)[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M") %>%
filter(year == "2020") %>%
transmute(amount = as.numeric(value),
date = as.Date(as.yearmon(paste(year, month), "%Y %m")),
normalize = amount / first(amount) * 100)
View(gdp)
gdp <- ApiData(11721,
Makrost = "bnpb.nr23_9",
ContentsCode = "Løpende priser, sesongjustert (mill. kr)",
Tid = T)[[1]] %>%
separate(col = "måned", into = c("year", "month"), sep = "M") %>%
filter(year == "2020") %>%
transmute(amount = as.numeric(value),
date = as.Date(as.yearmon(paste(year, month), "%Y %m")),
normalized = amount / first(amount) * 100)
gdp_xts <- xts(gdp$normalized, gdp$date)
colnames(gdp_xts) <- c("GDP")
View(gdp)
View(gdp_xts)
